
%% Figure 1+2: Main Extraction to Notification Flow (Unified and Detailed)
```mermaid
sequenceDiagram
    participant ControlM as Control-M Scheduler
    participant JCL_Extraction as JCL Extraction (Mainframe)
    participant MainframeDB as Mainframe DB
    participant Storage as Mainframe File Storage
    participant BatchMTU as MTU Batch Processor
    participant DBMTU as MTU Open DB
    participant SmartNotif as Smart Notification Batch

    ControlM->>JCL_Extraction: Trigger extraction process
    JCL_Extraction->>JCL_Extraction: Apply eligibility rules (customers without MTU)
    loop For each eligible customer
        JCL_Extraction->>MainframeDB: Set status = "pending batch notification"
        JCL_Extraction->>Storage: Write record to interface file
    end
    JCL_Extraction->>BatchMTU: Transfer file via SFTP

    BatchMTU->>BatchMTU: Parse file line by line
    loop For each customer
        BatchMTU->>DBMTU: Check for existing UUID
        BatchMTU->>BatchMTU: Generate UUIDv4
        BatchMTU->>DBMTU: Insert UUID, status = "pending", retries = 0
    end

    BatchMTU->>SmartNotif: Send file (customerId, UUID, amount, isDefault flag)
    BatchMTU->>SmartNotif: Notify availability
    SmartNotif-->>BatchMTU: Acknowledge receipt
```

%% Figure 3+5: Notification Response and Mainframe Update (Unified and with Date Check)
```mermaid
sequenceDiagram
    participant DataLake as Data Lake
    participant BatchMTU as MTU Batch Processor
    participant DBMTU as MTU Open DB
    participant ControlM as Control-M Scheduler
    participant JCL_Update as JCL Update (Mainframe)
    participant MainframeDB as Mainframe DB

    DataLake->>BatchMTU: Deliver response file with customerId, UUID, delivery status, timestamp
    loop For each record in file
        BatchMTU->>DBMTU: Validate notificationId exists and matches UUID
        BatchMTU->>DBMTU: Check timestamp difference from original send
        alt Timestamp is recent and matches latest attempt
            BatchMTU->>DBMTU: Update status = "delivered"
        else Outdated timestamp
            BatchMTU->>DBMTU: Ignore or mark as obsolete response
        end
    end

    ControlM->>BatchMTU: Trigger update file generation
    BatchMTU->>DBMTU: Retrieve customers with status = "delivered", eligible for update
    BatchMTU->>BatchMTU: Build update interface
    BatchMTU->>JCL_Update: Transfer file via SFTP

    JCL_Update->>MainframeDB: For each record, check if MTU is already set by customer
    alt MTU set by customer
        JCL_Update-->>MainframeDB: Skip update
    else No MTU set
        JCL_Update->>MainframeDB: Apply assigned default/average amount
    end
```

%% Figure 4: Transaction Average Assignment
```mermaid
sequenceDiagram
    participant DataLake as Data Lake
    participant BatchMTU as MTU Batch Processor
    participant DBMTU as MTU Open DB
    participant Catalog as Default Amount Catalog

    DataLake->>BatchMTU: Deliver average transaction file
    loop For each customer
        alt Has transaction average
            BatchMTU->>DBMTU: Assign average as MTU amount
        else No average
            BatchMTU->>Catalog: Fetch default amount by customer segment
            BatchMTU->>DBMTU: Assign default amount
        end
    end
```

%% Figure 6: Notification Retry Handling
```mermaid
sequenceDiagram
    participant BatchMTU as MTU Batch Processor
    participant DBMTU as MTU Open DB
    participant SmartNotif as Smart Notification Batch

    BatchMTU->>DBMTU: Fetch failed notifications
    loop For each failed notification
        alt Retry count < max retries
            BatchMTU->>BatchMTU: Generate new UUID
            BatchMTU->>DBMTU: Update retry count and status
            BatchMTU->>SmartNotif: Resend notification with updated UUID
        else Exceeded max retries
            BatchMTU->>DBMTU: Mark as permanently failed
        end
    end
```

%% Figure 7: Record Cleanup
```mermaid
sequenceDiagram
    participant ControlM as Control-M Scheduler
    participant BatchMTU as MTU Batch Processor
    participant DBMTU as MTU Open DB

    ControlM->>BatchMTU: Start cleanup job
    BatchMTU->>DBMTU: Query old records by expiration policy
    BatchMTU->>DBMTU: Delete or archive expired records
```
