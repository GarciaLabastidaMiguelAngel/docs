
Descripcion técnica del diagrama de contexto – Plataforma de MTU Batch Notifications

1. Arquitectura General

El diagrama representa una arquitectura híbrida compuesta por:
- Mainframe Z (IBM z/OS)
- Data Lake corporativo
- Plataforma Batch (OHE) en Red Hat Enterprise Linux (RHEL 8.x)
- Base de datos Oracle para persistencia de control y notificaciones
- Smart Notification como sistema externo de mensajería

Todos los flujos están contenidos dentro de la [INTRANET], con protocolos seguros tipo SFTP y orquestación a través de Control-M.

2. Procesos principales identificados

Mainframe (IBM z/OS)
- JCL MTU extract: selecciona clientes sin MTU definido desde TABLAS CORP y PERSONAS. Genera archivo .csv y actualiza status en DB2.
- JCL MTU update: actualiza campo MTU en DB2 con base en archivo generado por Batch MTU.

Data Lake
- Entrega vía SFTP:
  - transactional_average.csv
  - notification_responses.csv

3. Plataforma Batch MTU (RHEL 8.x – MegaID: 4671)

Servidor que ejecuta el componente central de notificación y actualización: MTU.jar.

- Desarrollado en Spring Boot + Spring Batch (Java 17).
- Ejecutado por Control-M.
- Usa sistema de archivos para intercambio de archivos.
- Se apoya en Oracle como fuente de verdad.

Jobs incluidos en MTU.jar:

01.mtu-extract-parse-job
- Lee archivo MTUextract.csv.
- Verifica notificaciones previas.
- Determina monto por catálogo.
- Persiste registro con status = pending.

02.mtu-notify-generate-job
- Consulta Oracle por notificaciones pendientes.
- Genera archivo hacia Smart Notification y lo transfiere por SFTP.

03.mtu-response-parse-job
- Lee archivo notification_responses.csv.
- Correlaciona con UUID y actualiza status en Oracle.

04.mtu-mainframe-update-job
- Ejecutado diario a las 02:00 a.m.
- Valida entregas exitosas y espera.
- Aplica monto de última notificación exitosa.
- Si no hay respuesta, aplica promedio del catálogo.
- Genera archivo para JCL update.

05.mtu-cleanup-job
- Elimina registros antiguos o ya finalizados.

4. Plataforma Smart Notification

- RHEL 8.x con Java 17.
- Procesa archivo recibido desde MTU Notifications.
- Ejecuta lógica de envío al cliente.
- Reporta resultados a Data Lake.

5. Persistencia en Oracle

- Tabla de notificaciones: UUID, monto, status, retry, timestamp, source.
- Catálogo de montos por segmento.
- Catálogo de promedios.
- Trazabilidad completa.

6. Seguridad

- Cada servidor Batch tiene su propio SFTP.
- No se usa un SFTP centralizado.
- Control total vía Control-M.

7. Ventajas

- Uso de componentes existentes.
- Escalabilidad y modularidad.
- Compatible con requerimientos regulatorios.
- Fallback inteligente vía catálogos.
- Integridad trazable por UUID.

